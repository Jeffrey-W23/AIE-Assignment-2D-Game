// #includes, using, etc
#pragma once
#include "Application.h"
#include "Renderer2D.h"
#include "Audio.h"
#include "Texture.h"
#include "Font.h"
#include "Input.h"
#include "Player.h"
#include "Map.h"
using namespace aie;

//--------------------------------------------------------------------------------------
// Application2D object. Inheritance from Application.
//--------------------------------------------------------------------------------------
class Application2D : public Application {
public:

	//--------------------------------------------------------------------------------------
	// Default Constructor.
	//--------------------------------------------------------------------------------------
	Application2D();

	//--------------------------------------------------------------------------------------
	// Default Destructor
	//--------------------------------------------------------------------------------------
	virtual ~Application2D();

	//--------------------------------------------------------------------------------------
	// startup: Initialize the game.
	//
	// Returns:
	//		bool: Returns a true or false for if the startup is sucessful.
	//--------------------------------------------------------------------------------------
	virtual bool startup();

	//--------------------------------------------------------------------------------------
	// shutdown: Called on application shutdown and does all the cleaning up (eg. Deleteing pointers.)
	//--------------------------------------------------------------------------------------
	virtual void shutdown();

	//--------------------------------------------------------------------------------------
	// Update: A virtual function to update objects.
	//
	// Param:
	//		deltaTime: Pass in deltaTime. A number that updates per second.
	//--------------------------------------------------------------------------------------
	virtual void update(float deltaTime);

	//--------------------------------------------------------------------------------------
	// Draw: A virtual function to render (or "draw") objects to the screen.
	//--------------------------------------------------------------------------------------
	virtual void draw();

protected:

	//--------------------------------------------------------------------------------------
	// A pointer to Renderer2D
	//--------------------------------------------------------------------------------------
	Renderer2D* m_2dRenderer;
	
	//--------------------------------------------------------------------------------------
	// A pointer to Texture
	//--------------------------------------------------------------------------------------
	Texture* m_shipTexture;
	
	//--------------------------------------------------------------------------------------
	// A pointer to Font
	//--------------------------------------------------------------------------------------
	Font* m_font;

	//--------------------------------------------------------------------------------------
	// A pointer to Audio
	//--------------------------------------------------------------------------------------
	Audio* m_audio;
	
	//--------------------------------------------------------------------------------------
	// floats for the x and y of the camera
	//--------------------------------------------------------------------------------------
	float m_cameraX, m_cameraY;

	//--------------------------------------------------------------------------------------
	// A float m_timer
	//--------------------------------------------------------------------------------------
	float m_timer;

	//--------------------------------------------------------------------------------------
	// A pointer to Player
	//--------------------------------------------------------------------------------------
	Player* player;

	//--------------------------------------------------------------------------------------
	// A pointer to the Map
	//--------------------------------------------------------------------------------------
	Map* map;
};